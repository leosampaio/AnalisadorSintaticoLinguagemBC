/* Generated By:JavaCC: Do not edit this line. ParserExampleConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserExampleConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 6;
  /** RegularExpression Id. */
  int SQRT = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int FOR = 14;
  /** RegularExpression Id. */
  int PRINT = 15;
  /** RegularExpression Id. */
  int BREAK = 16;
  /** RegularExpression Id. */
  int CONTINUE = 17;
  /** RegularExpression Id. */
  int QUIT = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int SCALE = 20;
  /** RegularExpression Id. */
  int IBASE = 21;
  /** RegularExpression Id. */
  int OBASE = 22;
  /** RegularExpression Id. */
  int LAST = 23;
  /** RegularExpression Id. */
  int DEFINE = 24;
  /** RegularExpression Id. */
  int AUTO = 25;
  /** RegularExpression Id. */
  int RETORNO = 26;
  /** RegularExpression Id. */
  int NUM = 27;
  /** RegularExpression Id. */
  int STRING = 28;
  /** RegularExpression Id. */
  int ID = 29;
  /** RegularExpression Id. */
  int ATRIBUICAO = 30;
  /** RegularExpression Id. */
  int ATRIBUICAOSUM = 31;
  /** RegularExpression Id. */
  int ATRIBUICAOSUB = 32;
  /** RegularExpression Id. */
  int ATRIBUICAOMUL = 33;
  /** RegularExpression Id. */
  int ATRIBUICAODIV = 34;
  /** RegularExpression Id. */
  int ATRIBUICAOMOD = 35;
  /** RegularExpression Id. */
  int ATRIBUICAOPOW = 36;
  /** RegularExpression Id. */
  int MUL = 37;
  /** RegularExpression Id. */
  int DIV = 38;
  /** RegularExpression Id. */
  int MOD = 39;
  /** RegularExpression Id. */
  int SUB = 40;
  /** RegularExpression Id. */
  int SUM = 41;
  /** RegularExpression Id. */
  int INC = 42;
  /** RegularExpression Id. */
  int DEC = 43;
  /** RegularExpression Id. */
  int POW = 44;
  /** RegularExpression Id. */
  int EQUAL = 45;
  /** RegularExpression Id. */
  int MINOREQ = 46;
  /** RegularExpression Id. */
  int GREATEREQ = 47;
  /** RegularExpression Id. */
  int DIF = 48;
  /** RegularExpression Id. */
  int MINOR = 49;
  /** RegularExpression Id. */
  int GREATER = 50;
  /** RegularExpression Id. */
  int OR = 51;
  /** RegularExpression Id. */
  int AND = 52;
  /** RegularExpression Id. */
  int NOT = 53;
  /** RegularExpression Id. */
  int DOT = 54;
  /** RegularExpression Id. */
  int CHAVED = 55;
  /** RegularExpression Id. */
  int CHAVEE = 56;
  /** RegularExpression Id. */
  int COLCHD = 57;
  /** RegularExpression Id. */
  int COLCHE = 58;
  /** RegularExpression Id. */
  int PARD = 59;
  /** RegularExpression Id. */
  int PARE = 60;
  /** RegularExpression Id. */
  int COMMA = 61;
  /** RegularExpression Id. */
  int SEMICOLON = 62;
  /** RegularExpression Id. */
  int LINEBREAK = 63;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\f\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<COMENTARIO>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"sqrt\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"print\"",
    "\"break\"",
    "\"continue\"",
    "\"quit\"",
    "\"length\"",
    "\"scale\"",
    "\"ibase\"",
    "\"obase\"",
    "\"last\"",
    "\"define\"",
    "\"auto\"",
    "\"return\"",
    "<NUM>",
    "<STRING>",
    "<ID>",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"^=\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"-\"",
    "\"+\"",
    "\"++\"",
    "\"--\"",
    "\"^\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"||\"",
    "\"&&\"",
    "\"!\"",
    "\".\"",
    "\"}\"",
    "\"{\"",
    "\"]\"",
    "\"[\"",
    "\")\"",
    "\"(\"",
    "\",\"",
    "\";\"",
    "\"\\n\"",
  };

}
