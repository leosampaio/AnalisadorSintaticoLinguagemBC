/* Generated By:JavaCC: Do not edit this line. ParserExampleConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserExampleConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 7;
  /** RegularExpression Id. */
  int SQRT = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int PRINT = 16;
  /** RegularExpression Id. */
  int BREAK = 17;
  /** RegularExpression Id. */
  int CONTINUE = 18;
  /** RegularExpression Id. */
  int QUIT = 19;
  /** RegularExpression Id. */
  int LENGTH = 20;
  /** RegularExpression Id. */
  int SCALE = 21;
  /** RegularExpression Id. */
  int IBASE = 22;
  /** RegularExpression Id. */
  int OBASE = 23;
  /** RegularExpression Id. */
  int LAST = 24;
  /** RegularExpression Id. */
  int DEFINE = 25;
  /** RegularExpression Id. */
  int AUTO = 26;
  /** RegularExpression Id. */
  int RETORNO = 27;
  /** RegularExpression Id. */
  int NUM = 28;
  /** RegularExpression Id. */
  int STRING = 29;
  /** RegularExpression Id. */
  int ID = 30;
  /** RegularExpression Id. */
  int ATRIBUICAO = 31;
  /** RegularExpression Id. */
  int ATRIBUICAOSUM = 32;
  /** RegularExpression Id. */
  int ATRIBUICAOSUB = 33;
  /** RegularExpression Id. */
  int ATRIBUICAOMUL = 34;
  /** RegularExpression Id. */
  int ATRIBUICAODIV = 35;
  /** RegularExpression Id. */
  int ATRIBUICAOMOD = 36;
  /** RegularExpression Id. */
  int ATRIBUICAOPOW = 37;
  /** RegularExpression Id. */
  int MUL = 38;
  /** RegularExpression Id. */
  int DIV = 39;
  /** RegularExpression Id. */
  int MOD = 40;
  /** RegularExpression Id. */
  int SUB = 41;
  /** RegularExpression Id. */
  int SUM = 42;
  /** RegularExpression Id. */
  int INC = 43;
  /** RegularExpression Id. */
  int DEC = 44;
  /** RegularExpression Id. */
  int POW = 45;
  /** RegularExpression Id. */
  int EQUAL = 46;
  /** RegularExpression Id. */
  int MINOREQ = 47;
  /** RegularExpression Id. */
  int GREATEREQ = 48;
  /** RegularExpression Id. */
  int DIF = 49;
  /** RegularExpression Id. */
  int MINOR = 50;
  /** RegularExpression Id. */
  int GREATER = 51;
  /** RegularExpression Id. */
  int OR = 52;
  /** RegularExpression Id. */
  int AND = 53;
  /** RegularExpression Id. */
  int NOT = 54;
  /** RegularExpression Id. */
  int DOT = 55;
  /** RegularExpression Id. */
  int CHAVED = 56;
  /** RegularExpression Id. */
  int CHAVEE = 57;
  /** RegularExpression Id. */
  int COLCHD = 58;
  /** RegularExpression Id. */
  int COLCHE = 59;
  /** RegularExpression Id. */
  int PARD = 60;
  /** RegularExpression Id. */
  int PARE = 61;
  /** RegularExpression Id. */
  int COMMA = 62;
  /** RegularExpression Id. */
  int NULL = 63;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<SPACE>",
    "\"\\f\"",
    "<CR>",
    "<EOL>",
    "<CREOL>",
    "<TAB>",
    "<COMENTARIO>",
    "<COMENTARIOBLOCOABRE>",
    "<COMENTARIOBLOCOFECHA>",
    "<token of kind 10>",
    "<SQRT>",
    "<IF>",
    "<ELSE>",
    "<WHILE>",
    "<FOR>",
    "<PRINT>",
    "<BREAK>",
    "<CONTINUE>",
    "<QUIT>",
    "<LENGTH>",
    "<SCALE>",
    "<IBASE>",
    "<OBASE>",
    "<LAST>",
    "<DEFINE>",
    "<AUTO>",
    "<RETORNO>",
    "<NUM>",
    "<STRING>",
    "<ID>",
    "<ATRIBUICAO>",
    "<ATRIBUICAOSUM>",
    "<ATRIBUICAOSUB>",
    "<ATRIBUICAOMUL>",
    "<ATRIBUICAODIV>",
    "<ATRIBUICAOMOD>",
    "<ATRIBUICAOPOW>",
    "<MUL>",
    "<DIV>",
    "<MOD>",
    "<SUB>",
    "<SUM>",
    "<INC>",
    "<DEC>",
    "<POW>",
    "<EQUAL>",
    "<MINOREQ>",
    "<GREATEREQ>",
    "<DIF>",
    "<MINOR>",
    "GREATER>",
    "<OR>",
    "<AND>",
    "<NOT>",
    "<DOT>",
    "<CHAVED>",
    "<CHAVEE>",
    "<COLCHD>",
    "<COLCHE>",
    "<PARD>",
    "<PARE>",
    "<COMMA>",
    "<NULL>",
  };

}
